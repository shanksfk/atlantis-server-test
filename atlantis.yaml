version: 3

projects:
  - name: "infra"
    dir: "infra-local"
    workflow: "custom"

workflows:
  custom:
    plan:
      steps:
        - run: echo "Starting custom workflow"
        - run: git --version
        - run: |
            echo "Downloading and installing OPA..."
            curl -L -o opa https://openpolicyagent.org/downloads/v0.45.0/opa_linux_amd64
            chmod +x opa
            mkdir -p /home/atlantis/bin
            mv opa /home/atlantis/bin/opa
            export PATH=/home/atlantis/bin:$PATH
        - run: |
            echo "Downloading and installing Python 3..."
            PYTHON_VERSION="3.9.13"  # Specify the Python version you want
            curl -L -o python.tar.xz https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz
            mkdir -p /home/atlantis/bin/python
            tar -xf python.tar.xz -C /home/atlantis/bin/python --strip-components=1
            export PATH=/home/atlantis/bin/python/bin:$PATH
        - run: |
            echo "Running OPA policy checks..."
            OPA_RESULT=$(opa eval --format json --data infra-local/policy.rego --input tfplan.json "data.terraform.analysis.violations")
            echo "$OPA_RESULT" > opa_results.json
        - run: |
            echo "Displaying OPA results in table format..."
            python3 - <<EOF
            import json

            # Load the OPA results from the JSON file
            with open("opa_results.json", "r") as file:
                opa_results = json.load(file)

            # Extract the violations
            violations = opa_results["result"][0]["expressions"][0]["value"]

            # Print the table header
            print("No | Violation Types | Description")
            print("---|-----------------|-------------")

            # Print each violation in table format
            for i, violation in enumerate(violations, start=1):
                violation_type = violation["msg"].split(":")[0]
                description = violation["msg"]
                print(f"{i} | {violation_type} | {description}")
            EOF
        - run: |
            echo "Posting results to PR..."
            atlantis comment --file opa_results.md
    apply:
      steps:
        - apply