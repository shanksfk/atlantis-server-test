version: 3

projects:
  - name: "infra"
    dir: "infra-local"
    workflow: "custom"

workflows:
  custom:
    plan:
      steps:
        - run: echo "Starting custom workflow"
        - run: git --version
        - run: |
            echo "Initializing Terraform..."
            terraform init
        - run: |
            echo "Cleaning up previous plan files..."
            rm -f tfplan.binary tfplan.json
        - run: |
            echo "Generating Terraform plan in JSON format..."
            terraform plan -out=tfplan.binary
            terraform show -json tfplan.binary > tfplan.json
        - run: |
            echo "Running OPA policy checks..."
            echo "</details>"
            echo "## OPA Policy Check Results"

            # Run OPA and save output
            opa eval --format json --data policy.rego --input tfplan.json "data.terraform.analysis.violations" > opa_output.json

            echo "DEBUG: OPA Output Structure:"
            cat opa_output.json | jq .

            # Print table header
            echo "### 🚀 OPA Policy Check Results"

            # Check if there are any violations
            if jq -e '.result[0].expressions[0].value | length > 0' opa_output.json >/dev/null 2>&1; then
              echo "### ⚠️ **OPA Policy Violations Detected!**" >> opa_comment.txt
              echo "The following policy violations were found in your Terraform plan:" >> opa_comment.txt
              echo '```markdown' >> opa_comment.txt
              echo "| 🚨 **Violation #** | 🔍 **Issue Description** |" >> opa_comment.txt
              echo "|------------------|--------------------------|" >> opa_comment.txt
        
              # Extract and format violations properly
              jq -r '.result[0].expressions[0].value[]' opa_output.json | awk '{print "| "NR" | "$0" |"}' >> opa_comment.txt
        
              echo '```' >> opa_comment.txt
              echo "---" >> opa_comment.txt
              echo "🔴 **Fix the above violations before applying the Terraform plan.**" >> opa_comment.txt
            else
              echo "### ✅ No OPA Policy Violations Found 🎉" 
            fi

            # Cleanup
            rm -f opa_output.json

    apply:
      steps:
        - run: |
            echo "Cleaning up any existing plan files..."
            rm -f tfplan.binary tfplan.json
        - apply