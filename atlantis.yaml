version: 3

projects:
  - name: "infra"
    dir: "infra-local"
    workflow: "custom"



workflows:
  custom:
    plan:
      steps:
        - run: echo "Starting custom workflow"
        - run: |
            echo "Initializing Terraform..."
            terraform init
        - run: |
            echo "Cleaning up previous plan files..."
            rm -f tfplan.binary tfplan.json
        - run: |
            echo "Generating Terraform plan in JSON format..."
            terraform plan -out=tfplan.binary
            terraform show -json tfplan.binary > tfplan.json
        - run: |

            opa eval --format json --data policy.rego --input tfplan.json "data.terraform.analysis.violations" > opa_output.json
        
#            # Parse OPA output and generate Markdown table
#            echo "DEBUG: OPA Output Structure:"
#            cat opa_output.json | jq .
        
            # Generate Markdown table with extracted violations
            echo "Generating Markdown table..."
            echo "| #   | Violation Message |" > opa_table.md
            echo "|-----|--------------------|" >> opa_table.md
        
            jq -r '.result[].expressions[].value[]' opa_output.json | awk '{print "| " NR " | " $0 " |"}' >> opa_table.md
        
            # Add Markdown table to a comment file
            echo "### OPA Policy Violations Detected!\n" > comment.md
            cat opa_table.md >> comment.md
            echo "\n **Fix these violations before applying Terraform!**" >> comment.md
#
#            # Print the comment for debugging
#            echo "Generated Comment:"
#            cat comment.md
            

        - run: |
            echo "Posting a Custom Comment to GitHub..."

            # Read comment.md safely and escape special characters
            COMMENT_BODY=$(jq -Rs . < comment.md | tr -d '\r')


            # Debug: Print the escaped JSON payload before sending
            PAYLOAD="{\"body\": $COMMENT_BODY}"


            # Post the comment to the PR dynamically
            curl -s -X POST -H "Authorization: token $ATLANTIS_GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$BASE_REPO_OWNER/$BASE_REPO_NAME/issues/$PULL_NUM/comments" \
            -d "$PAYLOAD"


    apply:
      steps:
        - run: |
            echo "Cleaning up any existing plan files..."
            rm -f tfplan.binary tfplan.json
        - apply