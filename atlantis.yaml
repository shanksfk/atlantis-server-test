version: 3

projects:
  - name: "infra"
    dir: "infra-local"
    workflow: "custom"



workflows:
  custom:
    plan:
      steps:
        - run: echo "Starting custom workflow"
        - run: |
            echo "Initializing Terraform..."
            terraform init
        - run: |
            echo "Cleaning up previous plan files..."
            rm -f tfplan.binary tfplan.json
        - run: |
            echo "Generating Terraform plan in JSON format..."
            terraform plan -out=tfplan.binary
            terraform show -json tfplan.binary > tfplan.json
            if [ "$VIOLATION_COUNT" -eq 0 ]; then
              # No violations Post a success message
              echo "**No Policy Violations Detected!**" > comment.md
            else
              # Violations exist Generate the Markdown table
              echo "Generating Markdown table..."
              echo "### Policy Violations Detected!" > comment.md
              echo "" >> comment.md  # Add an empty line for proper Markdown spacing
              echo "| #   | Violation Message |" >> comment.md
              echo "|-----|--------------------|" >> comment.md
            
              jq -r '.result[].expressions[].value[]' opa_output.json | awk '{print "| " NR " | " $0 " |"}' >> comment.md
            
              # Add the final line outside the table
              echo "" >> comment.md  # Add an empty line for proper Markdown spacing
              echo "**Fix these violations before applying Terraform!**" >> comment.md
            fi

            

        - run: |
            echo "Posting a Custom Comment to GitHub..."

            # Read comment.md safely and escape special characters
            COMMENT_BODY=$(jq -Rs . < comment.md | tr -d '\r')


            # Debug: Print the escaped JSON payload before sending
            PAYLOAD="{\"body\": $COMMENT_BODY}"


            # Post the comment to the PR dynamically
            curl -s -X POST -H "Authorization: token $ATLANTIS_GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$BASE_REPO_OWNER/$BASE_REPO_NAME/issues/$PULL_NUM/comments" \
            -d "$PAYLOAD"


    apply:
      steps:
        - run: |
            echo "Cleaning up any existing plan files..."
            rm -f tfplan.binary tfplan.json
        - apply